---
- name: copy configured filters
  copy:
    src: '{{ item }}'
    dest: '{{ fail2ban_filter_path }}/{{ item | basename }}'
  with_fileglob: "{{ fail2ban_upload_filters_path }}/*.conf"
  loop_control:
    label: "{{ item | basename }}"
  notify: restart_fail2ban

- name: copy custom actions
  copy:
    src: '{{ item }}'
    dest: '{{ fail2ban_action_path }}/{{ item | basename}}'
  with_fileglob: "{{ fail2ban_upload_actions_path }}/*"
  loop_control:
    label: "{{ item | basename }}"
  when: (item | basename) in fail2ban_actions
  notify: restart_fail2ban

- name: set jail.local
  template:
    src: jail.local.j2
    dest: '{{ fail2ban_path }}/jail.local'
    mode: 0644
  notify: restart_fail2ban

- name: ensure {{ fail2ban_jail_path }} exists
  file:
    dest: '{{ fail2ban_jail_path }}'
    owner: root
    group: root
    mode: '0755'
    state: directory
  when: ansible_distribution_release != 'precise'

- name: set custom jails
  template:
    src: jail.conf.j2
    dest: '{{ fail2ban_jail_path }}/{{ item.key }}.conf'
    mode: 0644
  with_dict: '{{ fail2ban_jails }}'
  loop_control:
    label: "{{ item.key }}"
  notify: restart_fail2ban
  when: ansible_distribution_release != 'precise'

- name: remove custom jails
  file:
    path: '{{ fail2ban_jail_path }}/{{ item.key }}.conf'
    state: absent
  with_items: '{{ remove_fail2ban_jails }}'
  loop_control:
    label: "{{ item.key }}"
  notify: restart_fail2ban
  when: ansible_distribution_release != 'precise'
